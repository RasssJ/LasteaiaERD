// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TARge20.Data;

namespace TARge20.Data.Migrations
{
    [DbContext(typeof(TARge20DbContext))]
    [Migration("20210907141216_CodeFirstFirmaDB")]
    partial class CodeFirstFirmaDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TARge20.Core.Domain.Ametinimetus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nimetus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TöötajaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TöötajaID");

                    b.ToTable("Ametinimetused");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Haigusleht", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Algus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Lõpp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Põhjus")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TöötajaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TöötajaID");

                    b.ToTable("Haiguslehed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laenutamine", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Algus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Lõpp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Põhjus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TöötajaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TöötajaID");

                    b.ToTable("Laenutused");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laps", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Sünnipäev")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TöötajaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TöötajaID");

                    b.ToTable("Lapsed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Puhkus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Algus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Lõpp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Põhjus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TöötajaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TöötajaID");

                    b.ToTable("Puhkused");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Töötaja", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Eesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perenimi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Töötajad");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Ametinimetus", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Töötaja", null)
                        .WithMany("Ametinimetused_ID")
                        .HasForeignKey("TöötajaID");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Haigusleht", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Töötaja", null)
                        .WithMany("Haiguslehed_ID")
                        .HasForeignKey("TöötajaID");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laenutamine", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Töötaja", null)
                        .WithMany("Laenutamised_ID")
                        .HasForeignKey("TöötajaID");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laps", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Töötaja", null)
                        .WithMany("Lapsed_ID")
                        .HasForeignKey("TöötajaID");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Puhkus", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Töötaja", null)
                        .WithMany("Puhkused_ID")
                        .HasForeignKey("TöötajaID");
                });
#pragma warning restore 612, 618
        }
    }
}
